
#define        COV_RATIO                       0.2            //ug/mmm / mv
#define        NO_DUST_VOLTAGE                 400            //mv
#define        SYS_VOLTAGE                     5000           



const int iled = 7;                                            //drive the led of sensor
const int vout = 0;                                            //analog input
const int blue1 = 27;
const int green = 26;
const int blue2 = 28;
const int fire = 50;
int buzz = 42;
int gas_din=49;
int gas_ain= 8;
int ad_value;
int mq9;
int inByte = 0;
int go = 8;

float density, voltage;
int   adcvalue;


int Filter(int m)
{
  static int flag_first = 0, _buff[10], sum;
  const int _buff_max = 10;
  int i;
  
  if(flag_first == 0)
  {
    flag_first = 1;

    for(i = 0, sum = 0; i < _buff_max; i++)
    {
      _buff[i] = m;
      sum += _buff[i];
    }
    return m;
  }
  else
  {
    sum -= _buff[0];
    for(i = 0; i < (_buff_max - 1); i++)
    {
      _buff[i] = _buff[i + 1];
    }
    _buff[9] = m;
    sum += _buff[9];
    
    i = sum / 10.0;
    return i;
  }
}


void setup(void)
{
  pinMode(blue1, OUTPUT);
  pinMode(blue2, OUTPUT);
  pinMode(green, OUTPUT);
  pinMode(iled, OUTPUT);
  pinMode(fire, OUTPUT);
  digitalWrite(green,HIGH);
  digitalWrite(blue1,LOW);
  digitalWrite(fire, LOW);
  digitalWrite(blue2,HIGH);
  digitalWrite(iled, LOW);                                     //iled default closed
  pinMode(gas_din,INPUT);                                      // This line is for MQ 135
  pinMode(gas_ain,INPUT);                                      // MQ 135
  pinMode(6, OUTPUT);
  Serial.begin(9600);                                         //send and receive at 9600 baud
  delay(600);                                               //let the sensors warm up remove if they are warm
}

void loop(void)
{
 
  inByte = Serial.read();

  if (inByte == '1'){
    go = 1;
  }
  if (inByte == '0'){
    go = 0;
  }
   if (go == 1){
    
    
    
    /*
    get adcvalue
    */
    digitalWrite(iled, HIGH);
    digitalWrite(blue2, LOW);
    delayMicroseconds(280);
    adcvalue = analogRead(vout);
    digitalWrite(iled, LOW);
    
    adcvalue = Filter(adcvalue);
    
    /*
    covert voltage (mv)
    */
    voltage = (SYS_VOLTAGE / 1024.0) * adcvalue * 11;
    
    /*
    voltage to density
    */
    if(voltage >= NO_DUST_VOLTAGE)
    {
      voltage -= NO_DUST_VOLTAGE;
      
      density = voltage * COV_RATIO;
    }
    else
      density = 0;
      
    /*
    display the result
    */
    Serial.print("The current dust concentration is: ");
    Serial.print(density);
    Serial.print(" ug/m3\n");  
    ad_value=analogRead(gas_ain);
    Serial.print("MQ 135 value: ");
    Serial.println(ad_value);
    mq9=analogRead(4);//Read Gas value from analog 0
    Serial.print("MQ 9 value: ");
    Serial.println(mq9,DEC);//Print the value to serial port
    delay(100);
    if(density > 10000 || ad_value > 400 || mq9 == 0){
      Serial.println("Error with dust sensor");
      digitalWrite(blue1, HIGH);
      digitalWrite(green, LOW);
    }
    else{
      digitalWrite(blue1, LOW);
      digitalWrite(green, HIGH);
    }
   // if(density > 200 && ad_value > 100){
    //  digitalWrite(fire, HIGH);
     // Serial.println("FIRE!");
      //tone(buzz,580,100000);
    //}
    else if(ad_value > 300 && mq9 > 300){
      digitalWrite(fire, HIGH);
      Serial.println("FIRE!");
      tone(buzz,580,100000);
    //} 
    //else if(density > 200 && mq9 > 140){
     // digitalWrite(fire, HIGH);
      //Serial.println("FIRE!");
      //tone(buzz,580,10);
    //  delay(10);
   // }
    else{
      digitalWrite(fire, LOW);
      Serial.println("no fire detected");
      noTone(buzz);
    }
  delay(3000);
}
}
